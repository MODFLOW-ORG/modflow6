! ** Do Not Modify! MODFLOW 6 system generated file. **
module {{ component.title() }}{{ subcomponent.title() }}InputModule
  use ConstantsModule, only: LENVARNAME
  use InputDefinitionModule, only: InputParamDefinitionType, &
                                   InputBlockDefinitionType
  private
  public {{ component.capitalize() }}{{ subcomponent.capitalize() }} ParamFoundType
  public {{ component.lower() }}_{{ subcomponent.lower() }} param_definitions
  public {{ component.lower() }}_{{ subcomponent.lower() }} aggregate_definitions
  public {{ component.lower() }}_{{ subcomponent.lower() }} block_definitions
  public {{ component.lower() }}_{{ subcomponent.lower() }} multi_package
  public {{ component.lower() }}_{{ subcomponent.lower() }} subpackages

  type {{ component.capitalize() }}{{ subcomponent.capitalize() }}ParamFoundType
    {% for var in param_varnames %}
    logical :: {{ var.name }} = .false.
    {% endfor %}
  end type {{ component.capitalize() }}{{ subcomponent.capitalize() }}ParamFoundType

  logical :: {{ component.lower() }}_{{ subcomponent.lower() }}_multi_package = {{ multi_package|value }}

  character(len=16), parameter :: &
    {{ component.lower() }}_{{ subcomponent.lower() }}_subpackages(*) = &
    [ &
      {% for subpackage in subpackages %}
      {{ subpackage }}{% if not loop.last %},{% endif %} &
      {% endfor %}
    ]

  {% for param in params if not param.aggregate %}
  {% macros.param_statement(param) %}{% if not loop.last %},{% endif %} &
  {% endfor %}

  type(InputParamDefinitionType), parameter :: &
    {{ component.lower() }}_{{ subcomponent.lower() }}_param_definitions(*) = &
    [ &
      {% for param in params if not param.aggregate %}
      {{ param.name }}{% if not loop.last %},{% endif %} &
      {% endfor %}
    ]

  {% for param in params if params.aggregate %}
  {% macros.param_statement(param) %}{% if not loop.last %},{% endif %} &
  {% endfor %}

  type(InputBlockDefinitionType), parameter :: &
    {{ component.lower() }}_{{ subcomponent.lower() }}_aggregate_definitions(*) = &
    [ &
      {% for param in params if param.aggregate %}
      {{ param.name }}{% if not loop.last %},{% endif %} &
      {% endfor %}
    ]

  type(InputBlockDefinitionType), parameter :: &
    {{ component.lower() }}_{{ subcomponent.lower() }}_block_definitions(*) = &
    [ &
      {% for block in blocks %}
      {% macros.block_statement(block.name, block.required, block.aggregate, block.block_var)%}{% if not loop.last %},{% endif %} &
      {% endfor %}
    ]

end module {{ component.title() }}{{ subcomponent.title() }}InputModule