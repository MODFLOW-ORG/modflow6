name: MODFLOW 6 continuous integration
on:
  push:
    branches:
      - master
      - develop
      - ci-diagnose*
  pull_request:
    branches:
      - master
      - develop
jobs:
  lint:
    name: Lint (fprettify)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          cache-env: true

      - name: Check Fortran source formatting
        run: |
          .github/common/fortran-format-check.sh

  build:
    name: Build (gfortran 12)
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    env:
      FC: gfortran
      GCC_V: 12
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
      
      - name: Setup gfortran ${{ env.GCC_V }}
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ env.GCC_V }}

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          cache-env: true

      - name: Meson setup/compile
        run: |
          meson setup builddir -Ddebug=false -Dwerror=true
          meson compile -C builddir
      
      - name: Meson test
        run: |
          meson test --verbose --no-rebuild -C builddir

  test_gfortran_latest:
    name: Test (gfortran 12)
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
    defaults:
      run:
        shell: bash -l {0}
    env:
      FC: gfortran
      GCC_V: 12
    steps:
      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          path: modflow6

      - name: Checkout modflow6-testmodels
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-testmodels
          path: modflow6-testmodels

      - name: Setup gfortran ${{ env.GCC_V }}
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ env.GCC_V }}

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: modflow6/environment.yml
          cache-downloads: true
          cache-env: true

      - name: Build modflow6
        working-directory: modflow6
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir

      - name: Update flopy
        working-directory: modflow6/autotest
        run: |
          python update_flopy.py
      
      - name: Get executables
        working-directory: modflow6/autotest
        run: |
          pytest -v --durations 0 get_exes.py

      - name: Run tests
        working-directory: modflow6/autotest
        run: |
          pytest -v -n auto --durations 0

  test_gfortran_previous:
    name: Test gfortran (${{ matrix.GCC_V }}, ${{ matrix.os }})
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        GCC_V: [ 7, 8, 9, 10, 11 ]
    defaults:
      run:
        shell: bash -l {0}
    env:
      FC: gfortran
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          path: modflow6

      - name: Checkout modflow6-testmodels
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-testmodels
          path: modflow6-testmodels

      - name: Setup gfortran ${{ matrix.GCC_V }}
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ matrix.GCC_V }}

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: modflow6/environment.yml
          cache-downloads: true
          cache-env: true

      - name: Update flopy
        working-directory: modflow6/autotest
        run: |
          python update_flopy.py

      - name: Build modflow6
        working-directory: modflow6
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir
      
      - name: Get executables
        working-directory: modflow6/autotest
        run: |
          pytest -v --durations 0 get_exes.py

      - name: Run tests
        working-directory: modflow6/autotest
        run: |
          pytest -v -n auto --durations 0 

  test_ifort:
    name: Test (ifort)
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          path: modflow6

      - name: Checkout modflow6-testmodels
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-testmodels
          path: modflow6-testmodels

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: modflow6/environment.yml
          cache-downloads: true
          cache-env: true

      - name: Setup ifort
        uses: modflowpy/install-intelfortran-action@v1

      - name: Add Micromamba Scripts dir to path
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # https://github.com/modflowpy/install-intelfortran-action#conda-scripts
          $mamba_bin = "C:\Users\runneradmin\micromamba-root\envs\modflow6\Scripts"
          echo $mamba_bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build modflow6
        if: runner.os != 'Windows'
        working-directory: modflow6
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir

      - name: Build modflow6
        if: runner.os == 'Windows'
        working-directory: modflow6
        shell: pwsh
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir

      - name: Update flopy
        working-directory: modflow6/autotest
        run: |
          python update_flopy.py

      - name: Get executables
        if: runner.os != 'Windows'
        working-directory: modflow6/autotest
        run: |
          pytest -v --durations 0 get_exes.py
          
      - name: Get executables
        if: runner.os == 'Windows'
        working-directory: modflow6/autotest
        shell: pwsh
        run: |
          pytest -v --durations 0 get_exes.py
      
      - name: Run tests
        if: runner.os != 'Windows'
        working-directory: modflow6/autotest
        run: |
          pytest -v -n auto --durations 0

      - name: Run tests
        if: runner.os == 'Windows'
        working-directory: modflow6/autotest
        shell: pwsh
        run: |
          pytest -v -n auto --durations 0
  
  test_makefiles_gfortran:
    name: Test makefiles (gfortran ${{ matrix.gcc_v }}, ${{ matrix.os }})
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022]
        gcc_v: [ 12 ]
    defaults:
      run:
        shell: bash -l {0}
    env:
      FC: gfortran
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          path: modflow6

      - name: Checkout modflow6-testmodels
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-testmodels
          path: modflow6-testmodels

      - name: Setup gfortran ${{ matrix.gcc_v }}
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ matrix.gcc_v }}

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: modflow6/environment.yml
          cache-downloads: true
          cache-env: true

      - name: Test makefiles
        working-directory: modflow6/distribution
        run: |
          pytest -v -n auto build_makefiles.py
          
  test_makefiles_ifort:
    name: Test makefiles (ifort, ${{ matrix.os }})
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    defaults:
      run:
        shell: bash -l {0}
    env:
      FC: ifort
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          path: modflow6

      - name: Checkout modflow6-testmodels
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-testmodels
          path: modflow6-testmodels

      - name: Setup ifort
        uses: modflowpy/install-intelfortran-action@v1

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: modflow6/environment.yml
          cache-downloads: true
          cache-env: true

      - name: Test makefiles
        working-directory: modflow6/distribution
        run: |
          pytest -v -n auto build_makefiles.py

  test_nightly_build_gfortran:
    name: Test nightly build (gfortran 12)
    needs:
      - lint
      - build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            ostag: linux
          - os: macos-12
            ostag: mac
          - os: windows-2022
            ostag: win64
    env:
      GCC_V: 12
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout modflow6
        uses: actions/checkout@v3
      
      - name: Setup gfortran ${{ env.GCC_V }}
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ env.GCC_V }}

      - name: Setup Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          cache-env: true

      - name: Print Python package versions
        run: |
          pip list

      - name: Update flopy
        working-directory: autotest
        run: |
          python update_flopy.py
          
      - name: Run nightly build script
        working-directory: distribution
        run: |
          python build_nightly.py
          
      - name: Make sure zip file exists
        working-directory: distribution
        run: |
          path="temp_zip/${{ matrix.ostag }}.zip"
          if [ -e "$path" ]; then
            echo "Zipfile found: $path"
          else
            echo "Zipfile not found: $path"
            exit 1
          fi