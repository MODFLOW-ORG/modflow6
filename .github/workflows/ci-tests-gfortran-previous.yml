name: tests - gfortran - previous versions

on:
  push:
    branches:
      - develop
  pull_request:

env:
  PETSC_VERSION: "3.17.0"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        GCC_V: [9]
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2.3.4

    - uses: actions/cache@v1
      id: cache
      with:
        path: temp
        key: ${{ runner.os }}-${{ matrix.GCC_V }}-petsc-${{ env.PETSC_VERSION }}

    - name: Setup Python 3.8
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.8

    - name: Set up gfortran ${{ matrix.GCC_V }}
      run: |
        sudo apt-get install -y --no-install-recommends gcc-${{ matrix.GCC_V }} g++-${{ matrix.GCC_V }} gfortran-${{ matrix.GCC_V }}
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.GCC_V }} 100 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.GCC_V }} \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.GCC_V }} \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.GCC_V }}

    - name: Print GNU compiler versions
      run: |
        gcc --version
        gfortran --version
        g++ --version
        gcov --version
    
    - name: Install PETSc dependencies
      run: |
        sudo apt install -y openmpi-bin liblapack-dev
    
    - name: Check out PETSc
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir temp
        cd temp
        wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-$PETSC_VERSION.tar.gz
        tar xf petsc-$PETSC_VERSION.tar.gz
    
    - name: Compile PETSc
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: temp/petsc-${{ env.PETSC_VERSION }}
      run: |
        ./configure --with-debugging=no
        make all check
    
    - name: Set LD_LIBRARY_PATH and PKG_CONFIG_PATH
      run: |
        echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/temp/petsc-$PETSC_VERSION/arch-linux-c-opt/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/temp/petsc-$PETSC_VERSION/arch-linux-c-opt/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

    - name: Install python packages
      run: |
        .github/common/install-python-std.sh

    - name: Print python package versions
      run: |
        .github/common/python-version.sh

    - name: Set and print branch name
      run: |
        .github/common/git-branch-export.sh

    - name: Get regression test files
      run: |
        .github/common/get-largetests-regression-files.sh

    - name: Check out the correct regression test branch
      run: |
        .github/common/checkout-regression-branch.sh

    - name: Update flopy MODFLOW 6 classes
      run: |
        .github/common/update-flopy.sh

    - name: Setup modflow
      run: |
        meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin

    - name: Build and install modflow
      run: |
        meson install -C builddir

    - name: Get executables
      working-directory: autotest
      run: |
        pytest -v --durations=0 get_exes.py
    
    - name: Test applications
      working-directory: autotest
      run: |
        pytest -v --durations=0 test_z03_largetests.py::test_mf6model[test1002_biscqtg_dev]
