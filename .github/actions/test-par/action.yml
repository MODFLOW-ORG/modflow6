name: Test parallel MF6
description: Build and test parallel MODFLOW 6
runs:
  using: "composite"
  steps:

    - name: Setup GNU Fortran
      uses: fortran-lang/setup-fortran@v1
      with:
        compiler: gcc
        version: 13

    - name: Checkout PETSc
      uses: actions/checkout@v4
      with:
        repository: petsc/petsc
        path: petsc
        ref: release

    - name: Configure environment
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/petsc/linux-gnu/lib/pkgconfig" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/petsc/linux-gnu/bin" >> $GITHUB_PATH

    - name: Configure environment
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/petsc/arch-darwin-gcc-debug/lib/pkgconfig" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/petsc/arch-darwin-gcc-debug/bin" >> $GITHUB_PATH

    - name: Configure PETSc
      if: runner.os == 'Linux'
      shell: bash
      working-directory: petsc
      run: |
        sudo ./configure PETSC_ARCH=linux-gnu --download-fblaslapack --download-openmpi
        sudo make all

    - name: Configure PETSc
      if: runner.os == 'macOS'
      shell: bash
      working-directory: petsc
      run: |
        sudo ./configure PETSC_DIR="$GITHUB_WORKSPACE/petsc" PETSC_ARCH=arch-darwin-gcc-debug --download-fblaslapack --download-openmpi
        sudo make all

    - name: Build modflow6
      shell: bash -l {0}
      working-directory: modflow6
      run: |
        meson setup builddir -Ddebug=false -Dparallel=true --prefix=$(pwd) --libdir=bin
        meson install -C builddir
        meson test --verbose --no-rebuild -C builddir

    - name: Show Meson logs
      if: failure()
      shell: bash
      working-directory: modflow6
      run: cat builddir/meson-logs/meson-log.txt

    - name: Update flopy
      shell: bash -l {0}
      working-directory: modflow6/autotest
      run: python update_flopy.py

    - name: Get executables
      shell: bash -l {0}
      working-directory: modflow6/autotest
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: pytest -v --durations 0 get_exes.py

    - name: Test programs
      shell: bash -l {0}
      working-directory: modflow6/autotest
      env:
        REPOS_PATH: ${{ github.workspace }}
      run: pytest -v -n auto --parallel --durations 0 -k "test_par" --keep-failed .failed